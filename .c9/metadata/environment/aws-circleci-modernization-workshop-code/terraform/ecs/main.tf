{"changed":true,"filter":false,"title":"main.tf","tooltip":"/aws-circleci-modernization-workshop-code/terraform/ecs/main.tf","value":"terraform {\n  required_version = \">= 0.13.5\"\n  backend \"remote\" {\n    organization = \"Terraformtraining30\"\n\n    workspaces {\n      name = \"arm-aws-ecs\"\n    }\n  }\n}\n\nprovider \"aws\" {\n  region = \"us-east-1\"\n}\n\ndata \"template_file\" \"user_data\" {\n  template = file(\"${path.module}/user_data.sh\")\n\n  vars = {\n    CLUSTER_NAME = aws_ecs_cluster.app-arm-v8.name\n  }\n}\n\ndata \"template_file\" \"task_definition_json\" {\n  template = file(\"${path.module}/task_definition.json\")\n\n  vars = {\n    DOCKER_IMAGE_NAME = var.docker_img_name,\n    DOCKER_IMAGE_TAG  = var.docker_img_tag\n  }\n}\n\n#  IAMS\ndata \"aws_iam_policy_document\" \"ecs_agent\" {\n  statement {\n    actions = [\"sts:AssumeRole\"]\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"ec2.amazonaws.com\"]\n    }\n  }\n}\n\nresource \"aws_iam_role\" \"ecs_agent\" {\n  name               = \"ecs-agent\"\n  assume_role_policy = data.aws_iam_policy_document.ecs_agent.json\n}\n\n\nresource \"aws_iam_role_policy_attachment\" \"ecs_agent\" {\n  role       = aws_iam_role.ecs_agent.name\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role\"\n}\n\nresource \"aws_iam_instance_profile\" \"ecs_agent\" {\n  name = \"ecs-agent\"\n  role = aws_iam_role.ecs_agent.name\n}\n\n\n# AWS Auto Scale Launch Configuration\nresource \"aws_launch_configuration\" \"app\" {\n  name_prefix = \"app-arm-\"\n  security_groups = [\n    aws_security_group.app-arm-22.id,\n    aws_security_group.app-arm-80.id,\n    aws_security_group.app-arm-ELB-HTTP80.id\n  ]\n  key_name                    = var.key_pair\n  image_id                    = var.ami\n  instance_type               = var.instance_type\n  iam_instance_profile        = aws_iam_instance_profile.ecs_agent.name\n  user_data                   = data.template_file.user_data.rendered\n  associate_public_ip_address = true\n\n  root_block_device {\n    volume_size           = 60\n    volume_type           = \"standard\"\n    delete_on_termination = true\n  }\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_autoscaling_group\" \"app\" {\n  name = \"app-arm-v8\"\n  vpc_zone_identifier = [\n    aws_subnet.pub_subnet_a.id,\n    aws_subnet.pub_subnet_b.id\n  ]\n  min_size             = var.asg_min\n  max_size             = var.asg_max\n  desired_capacity     = var.asg_desired\n  launch_configuration = aws_launch_configuration.app.name\n  target_group_arns    = [aws_alb_target_group.alb.arn]\n  tag {\n    key                 = \"Name\"\n    value               = \"app-arm\"\n    propagate_at_launch = true\n  }\n}\n\n# ASG Scaling Policies\nresource \"aws_autoscaling_policy\" \"ec2-scale-up\" {\n  name                   = \"app-arm-v8-scale-up\"\n  scaling_adjustment     = 1\n  adjustment_type        = \"ChangeInCapacity\"\n  cooldown               = 300\n  autoscaling_group_name = aws_autoscaling_group.app.name\n}\n\nresource \"aws_autoscaling_policy\" \"ec2-scale-down\" {\n  name                   = \"app-arm-v8-scale-down\"\n  scaling_adjustment     = -1\n  adjustment_type        = \"ChangeInCapacity\"\n  cooldown               = 300\n  autoscaling_group_name = aws_autoscaling_group.app.name\n}\n\n# CloudWatch Alarms\nresource \"aws_cloudwatch_metric_alarm\" \"alarm-high\" {\n  alarm_name          = \"app-arm-v8-alarm-high\"\n  alarm_description   = \"EC2 Scale Up Alarm monitors NetworkOut values\"\n  comparison_operator = \"GreaterThanThreshold\"\n  evaluation_periods  = \"1\"\n  metric_name         = \"NetworkOut\"\n  namespace           = \"AWS/EC2\"\n  period              = \"300\"\n  statistic           = \"Average\"\n  threshold           = \"6000000\"\n  alarm_actions = [\n    aws_autoscaling_policy.ec2-scale-up.arn\n  ]\n  dimensions = {\n    AutoScalingGroupName = aws_autoscaling_group.app.name\n  }\n  depends_on = [\n    aws_autoscaling_group.app,\n    aws_autoscaling_policy.ec2-scale-up\n  ]\n}\n\nresource \"aws_cloudwatch_metric_alarm\" \"alarm-low\" {\n  alarm_name          = \"app-arm-v8-alarm-low\"\n  alarm_description   = \"EC2 Scale Down Alarm monitors NetworkOut values\"\n  comparison_operator = \"LessThanThreshold\"\n  evaluation_periods  = \"1\"\n  metric_name         = \"NetworkOut\"\n  namespace           = \"AWS/EC2\"\n  period              = \"300\"\n  statistic           = \"Average\"\n  threshold           = \"3000000\"\n  alarm_actions = [\n    aws_autoscaling_policy.ec2-scale-down.arn\n  ]\n  dimensions = {\n    AutoScalingGroupName = aws_autoscaling_group.app.name\n  }\n  depends_on = [\n    aws_autoscaling_group.app,\n    aws_autoscaling_policy.ec2-scale-down\n  ]\n}\n\n# AWS SNS Topic\nresource \"aws_sns_topic\" \"app-arm-v8-sns\" {\n  name         = \"app-arm-v8-notifications\"\n  display_name = \"app-arm-v8 scaling notifications\"\n}\n\n# AWS ASB Notfication\nresource \"aws_autoscaling_notification\" \"asg_notifications\" {\n  group_names = [\n  aws_autoscaling_group.app.name]\n\n  notifications = [\n    \"autoscaling:EC2_INSTANCE_LAUNCH\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE\",\n    \"autoscaling:EC2_INSTANCE_LAUNCH_ERROR\"\n  ]\n\n  topic_arn = aws_sns_topic.app-arm-v8-sns.arn\n  depends_on = [\n    aws_autoscaling_group.app\n  ]\n}\n\n# AWS Cloudwatch Log Groups\nresource \"aws_cloudwatch_log_group\" \"awslogs-app-arm\" {\n  name = \"awslogs-app-arm\"\n  tags = {\n    team  = \"devrel marketing\"\n    owner = \"Angel Rivera\"\n  }\n}\n\n# AWS Application Load Balancer Target Group\nresource \"aws_alb_target_group\" \"alb\" {\n  name     = \"app-arm-v8\"\n  port     = 80\n  protocol = \"HTTP\"\n  vpc_id   = aws_vpc.vpc.id\n  deregistration_delay  = 10\n  health_check {\n    path                = \"/\"\n    healthy_threshold   = 5\n    unhealthy_threshold = 10\n    interval            = 30\n    timeout             = 10\n  }\n\n}\n\n#AWS Application Load Balancer\nresource \"aws_alb\" \"main\" {\n  name = \"app-arm-v8\"\n  subnets = [\n    aws_subnet.pub_subnet_a.id,\n    aws_subnet.pub_subnet_b.id\n  ]\n  security_groups = [\n    aws_security_group.app-arm-ELB-HTTP80.id,\n  ]\n  tags = {\n    team  = \"DevRel Marketing\",\n    owner = \"Angel Rivera\"\n  }\n}\n\n#AWS App Load Balancer Listener\nresource \"aws_alb_listener\" \"front_end\" {\n  load_balancer_arn = aws_alb.main.id\n  port              = \"80\"\n  protocol          = \"HTTP\"\n  default_action {\n    target_group_arn = aws_alb_target_group.alb.id\n    type             = \"forward\"\n  }\n}\n\n#AWS ECS Task definition\nresource \"aws_ecs_task_definition\" \"app-arm-v8\" {\n  family                = \"app-arm\"\n  container_definitions = data.template_file.task_definition_json.rendered\n}\n\n#AWS ECS Cluster\nresource \"aws_ecs_cluster\" \"app-arm-v8\" {\n  name = \"app-arm-v8\"\n}\n\n#AWS ECS Service\nresource \"aws_ecs_service\" \"app-arm-v8\" {\n  name                               = \"srv_app-arm-v8\"\n  cluster                            = aws_ecs_cluster.app-arm-v8.name\n  desired_count                      = var.ecs_desired_count\n  deployment_minimum_healthy_percent = 50\n  deployment_maximum_percent         = 100\n  task_definition                    = aws_ecs_task_definition.app-arm-v8.arn\n  load_balancer {\n    target_group_arn = aws_alb_target_group.alb.id\n    container_name   = \"app-arm\"\n    container_port   = 5000\n  }\n  depends_on = [\n    aws_alb_listener.front_end\n  ]\n}\n","undoManager":{"mark":-2,"position":1,"stack":[[{"start":{"row":3,"column":20},"end":{"row":3,"column":35},"action":"remove","lines":["[Your Org Name]"],"id":2},{"start":{"row":3,"column":20},"end":{"row":4,"column":0},"action":"insert","lines":["Terraformtraining30",""]}],[{"start":{"row":3,"column":39},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":3}]]},"ace":{"folds":[],"scrolltop":653.8802490234375,"scrollleft":0,"selection":{"start":{"row":8,"column":3},"end":{"row":8,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1669544711093}